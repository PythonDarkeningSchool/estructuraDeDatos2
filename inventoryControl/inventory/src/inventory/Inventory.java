/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory;

import com.sun.glass.events.KeyEvent;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Iterator;
import javax.swing.ComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hiperezr
 */
public class Inventory extends javax.swing.JFrame {
    
    // HASHTABLE
    Hashtable<String, String> users =  new Hashtable<>();
    // HASMAP
    HashMap<String, HashMap<String, Object>> inventory = new HashMap<>();
    
    
    /**
     * Creates new form SystemPanel
     */
    public Inventory() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        showInventoryTab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        userID = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        jButton4 = new javax.swing.JButton();
        loginStatus = new javax.swing.JLabel();
        loginStatusIcon = new javax.swing.JLabel();
        labelLoginIcon = new javax.swing.JLabel();
        labelLoginLegend = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        newItem = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        addItemQty = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        addItemPrice = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        itemComboBox = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventoryTable = new javax.swing.JTable();
        updateInventoryButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        helpMenu = new javax.swing.JMenu();
        authorsMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        showInventoryTab.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                showInventoryTabFocusGained(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon("/Users/hiperezr/code/github/estructuraDeDatos2/inventoryControl/icons/enter-key.png")); // NOI18N
        jButton1.setToolTipText("Login with the provided credentials");
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Diwan Kufi", 0, 11)); // NOI18N
        jLabel5.setText("User ID");

        jLabel6.setFont(new java.awt.Font("Diwan Kufi", 0, 11)); // NOI18N
        jLabel6.setText("Password");

        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordKeyPressed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon("/Users/hiperezr/code/github/estructuraDeDatos2/inventoryControl/icons/broom.png")); // NOI18N
        jButton4.setToolTipText("Clear all the inputs");
        jButton4.setBorder(null);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        loginStatus.setFont(new java.awt.Font("Apple Braille", 1, 24)); // NOI18N
        loginStatus.setText("Not Logged In!");

        loginStatusIcon.setIcon(new javax.swing.ImageIcon("/Users/hiperezr/code/github/estructuraDeDatos2/inventoryControl/icons/login-lock.png")); // NOI18N

        labelLoginLegend.setFont(new java.awt.Font("Optima", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(password, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                            .addComponent(userID))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(loginStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addComponent(loginStatusIcon))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(labelLoginIcon))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(labelLoginLegend)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(userID, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(loginStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loginStatusIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(60, 60, 60)
                .addComponent(labelLoginIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(labelLoginLegend)
                .addGap(114, 114, 114))
        );

        showInventoryTab.addTab("Login", jPanel1);

        newItem.setToolTipText("Insert the item name");

        jLabel1.setFont(new java.awt.Font("Diwan Kufi", 0, 11)); // NOI18N
        jLabel1.setText("New Item");

        addItemQty.setToolTipText("Insert the quantity, only integer values are accepted");

        jLabel2.setFont(new java.awt.Font("Diwan Kufi", 0, 11)); // NOI18N
        jLabel2.setText("Quantity");

        jLabel3.setFont(new java.awt.Font("Diwan Kufi", 0, 11)); // NOI18N
        jLabel3.setText("Price");

        addItemPrice.setToolTipText("Insert the price, float values are accepted");
        addItemPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addItemPriceKeyPressed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon("/Users/hiperezr/code/github/estructuraDeDatos2/inventoryControl/icons/add-db.png")); // NOI18N
        jButton6.setToolTipText("Add a new item");
        jButton6.setBorder(null);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon("/Users/hiperezr/code/github/estructuraDeDatos2/inventoryControl/icons/broom.png")); // NOI18N
        jButton3.setToolTipText("Clear all the inputs");
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(newItem)
                    .addComponent(addItemQty)
                    .addComponent(addItemPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                .addContainerGap(266, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(newItem, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addItemQty, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(addItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(188, Short.MAX_VALUE))
        );

        showInventoryTab.addTab("Add Item", jPanel2);

        jLabel8.setFont(new java.awt.Font("Diwan Kufi", 0, 11)); // NOI18N
        jLabel8.setText("Item");

        itemComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        itemComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                itemComboBoxItemStateChanged(evt);
            }
        });
        itemComboBox.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                itemComboBoxInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                itemComboBoxCaretPositionChanged(evt);
            }
        });
        itemComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemComboBoxActionPerformed(evt);
            }
        });
        itemComboBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                itemComboBoxPropertyChange(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon("/Users/hiperezr/code/github/estructuraDeDatos2/inventoryControl/icons/delete.png")); // NOI18N
        jButton5.setToolTipText("Delete the item!");
        jButton5.setBorder(null);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel8)
                        .addGap(43, 43, 43)
                        .addComponent(itemComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jButton5)))
                .addContainerGap(297, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(itemComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(251, Short.MAX_VALUE))
        );

        showInventoryTab.addTab("Delete Item", jPanel3);

        inventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Qty", "Item", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(inventoryTable);

        updateInventoryButton.setIcon(new javax.swing.ImageIcon("/Users/hiperezr/code/github/estructuraDeDatos2/inventoryControl/icons/update.png")); // NOI18N
        updateInventoryButton.setToolTipText("Update table!");
        updateInventoryButton.setBorder(null);
        updateInventoryButton.setBorderPainted(false);
        updateInventoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateInventoryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(updateInventoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(updateInventoryButton)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        showInventoryTab.addTab("Show Inventory", jPanel4);

        helpMenu.setText("Help");
        helpMenu.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                helpMenuMenuSelected(evt);
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
        });
        helpMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuActionPerformed(evt);
            }
        });
        jMenuBar1.add(helpMenu);

        authorsMenu.setText("Authors");
        authorsMenu.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                authorsMenuMenuSelected(evt);
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
        });
        jMenuBar1.add(authorsMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(showInventoryTab, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(showInventoryTab, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        addUserstoHastable();
        disableTabs();
        itemComboBox.removeAllItems();
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        login();  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void login(){
        String user =  userID.getText();
        String pass = new String(password.getPassword());
        enableTabs(user, pass);  
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        userID.setText("");
        password.setText("");
        userID.requestFocus();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void showInventoryTabFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_showInventoryTabFocusGained
        newItem.requestFocus();
    }//GEN-LAST:event_showInventoryTabFocusGained

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        newItem.setText("");
        addItemQty.setText("");
        addItemPrice.setText("");
        newItem.requestFocus();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        addItem();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void addItem(){
        String item = newItem.getText();
        String qty = addItemQty.getText();
        String price = addItemPrice.getText();
        
        if(item.isEmpty() || qty.isEmpty() || price.isEmpty()){
            final ImageIcon pencil = new ImageIcon("../icons/pencil.png");

            JOptionPane.showMessageDialog(null,
            "Fill out all the fields",
            "Information required",
            JOptionPane.WARNING_MESSAGE,
            pencil);
            // Request focus
            newItem.requestFocus();
        }
        else if(!(item.isEmpty() && qty.isEmpty() && price.isEmpty())){
            insertItem(item, qty, price);
        }    
    }
    private void itemComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_itemComboBoxItemStateChanged

    }//GEN-LAST:event_itemComboBoxItemStateChanged

    private void itemComboBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_itemComboBoxPropertyChange

    }//GEN-LAST:event_itemComboBoxPropertyChange

    private void itemComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemComboBoxActionPerformed

    }//GEN-LAST:event_itemComboBoxActionPerformed

    private void itemComboBoxInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_itemComboBoxInputMethodTextChanged

    }//GEN-LAST:event_itemComboBoxInputMethodTextChanged

    private void itemComboBoxCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_itemComboBoxCaretPositionChanged

    }//GEN-LAST:event_itemComboBoxCaretPositionChanged

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        try{
            String item = itemComboBox.getSelectedItem().toString();
            // Remove items
            inventory.remove(item);
            itemComboBox.removeItem(item);

            final ImageIcon done = new ImageIcon("../icons/done.png");

            JOptionPane.showMessageDialog(null,
                String.format("The item: (%s) was deleted successfully", item),
                "Record deleted",
                JOptionPane.INFORMATION_MESSAGE,
                done);
        }
        catch(NullPointerException err){
            final ImageIcon clean = new ImageIcon("../icons/clean.png");

            JOptionPane.showMessageDialog(null,
                "There is not items to be deleted",
                "Database empty",
                JOptionPane.WARNING_MESSAGE,
                clean);
        }           
    }//GEN-LAST:event_jButton5ActionPerformed

    private void updateInventoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateInventoryButtonActionPerformed
        
        // Create an ArrayList with the elements from the comboBox
        ArrayList<String> itemList=new ArrayList<>();
        ComboBoxModel modelC = itemComboBox.getModel();
        int size = modelC.getSize();
                
        if(!(size == 0)){
            
            // INDEXED SEARCH ---
            for(int i=0; i < size; i++){
                Object element = modelC.getElementAt(i);
                itemList.add(element.toString());
            }

             // Traversing list through Iterator to add to the table rows
             DefaultTableModel model = (DefaultTableModel) inventoryTable.getModel();
             model.setRowCount(0); // Delete table content

             Iterator itr = itemList.iterator();
             while(itr.hasNext()){
                 String item = itr.next().toString();
                 String price = inventory.get(item).get("price").toString();
                 String qty = inventory.get(item).get("qty").toString();
                 // Create an object to insert in the table
                 Object[] row = {qty, item, price};
                 model.addRow(row);
             }
        }
        else{
            final ImageIcon collection = new ImageIcon("../icons/collection.png");

            JOptionPane.showMessageDialog(null,
            "Add some items to display this content",
            "Database empty",
            JOptionPane.WARNING_MESSAGE,
            collection);
        }


        
    }//GEN-LAST:event_updateInventoryButtonActionPerformed

    private void helpMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuActionPerformed

    }//GEN-LAST:event_helpMenuActionPerformed

    private void helpMenuMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_helpMenuMenuSelected
        final ImageIcon userManual = new ImageIcon("../icons/credentials.png");
        StringBuilder message = new StringBuilder();
        message.append("Valid credentials are:\n\n");
        message.append("userID: admin / password: admin\n");
        message.append("userID: guest / password: guest\n\n");
        message.append("Admin credentials will enable all tabs meanwhile "
                + "guest credentials only will enable \"Show inventory tab\" \n");
            
        JOptionPane.showMessageDialog(null,
            message.toString(),
            "User manual",
            JOptionPane.INFORMATION_MESSAGE,
            userManual);
    }//GEN-LAST:event_helpMenuMenuSelected

    private void authorsMenuMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_authorsMenuMenuSelected
        final ImageIcon authors = new ImageIcon("../icons/happy-man.png");
        StringBuilder message = new StringBuilder();
        message.append("The authors for this proyect are:\n\n");
        message.append("1. Humberto Israel Perez Rodriguez\n");
        message.append("2. Juan Carlos Navarro Borunda\n");
        message.append("3. Victor Hugo Robles Aguayo");
            
        JOptionPane.showMessageDialog(null,
            message.toString(),
            "Authors",
            JOptionPane.INFORMATION_MESSAGE,
            authors);
    }//GEN-LAST:event_authorsMenuMenuSelected

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed

        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            login();
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            login();
        }
    }//GEN-LAST:event_passwordKeyPressed

    private void addItemPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addItemPriceKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            addItem();
        }
    }//GEN-LAST:event_addItemPriceKeyPressed
    
    private void insertItem(String item, String qty, String price){
        
        if(inventory.containsKey(item)){
            final ImageIcon duplicatedRecord = new ImageIcon("../icons/duplicated-record.png");

            JOptionPane.showMessageDialog(null,
                String.format("The item: (%s) is already in the database", item),
                "Record duplicated",
                JOptionPane.ERROR_MESSAGE,
                duplicatedRecord);
            // Request focus
            newItem.requestFocus();
        }
        else{
            // Validate number's format
            if(!(validateInputs(qty, price))){
                inventory.put(item, new HashMap<>());
                inventory.get(item).put("qty", Integer.parseInt(qty));
                inventory.get(item).put("price", Float.parseFloat(price));
                final ImageIcon recordInserted = new ImageIcon("../icons/record-inserted.png");

                JOptionPane.showMessageDialog(null,
                    "Item successfully inserted",
                    "Database updated",
                    JOptionPane.ERROR_MESSAGE,
                    recordInserted);
                // Insert inputs into comboBoxes
                itemComboBox.addItem(item);
                // Clean inputs
                newItem.setText("");
                addItemQty.setText("");
                addItemPrice.setText("");
                newItem.requestFocus();            
            }

        }
    }
    private boolean validateInputs(String qty, String price){
        boolean flag = false;
        try{
            Integer.parseInt(qty);
        }
        catch(NumberFormatException err){
            final ImageIcon wrongInt = new ImageIcon("../icons/incorrect-number.png");

            JOptionPane.showMessageDialog(null,
                "Only integers are accepted!",
                "Wrong format: (Qty input)",
                JOptionPane.ERROR_MESSAGE,
                wrongInt);
            
            addItemQty.requestFocus();
            flag = true;
            return flag;
        }
        try{
            Float.parseFloat(price);
        }
        catch(NumberFormatException err){
            final ImageIcon wrongFloat = new ImageIcon("../icons/incorrect-number.png");

            JOptionPane.showMessageDialog(null,
                "Only integers & floats are accepted!",
                "Wrong format: (Price input)",
                JOptionPane.ERROR_MESSAGE,
                wrongFloat);
            
            addItemPrice.requestFocus();
            flag = true;
            return flag;
        }
        
        return flag;
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Mac OS X".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventory().setVisible(true);
            }
        });
    }
    
    
    private void disableTabs(){
        showInventoryTab.setEnabledAt(showInventoryTab.getTabCount() -3, false);
        showInventoryTab.setEnabledAt(showInventoryTab.getTabCount() -2, false);
        showInventoryTab.setEnabledAt(showInventoryTab.getTabCount() -1, false);
    }
    private void enableAdminTabs(){
        showInventoryTab.setEnabledAt(showInventoryTab.getTabCount() -3, true);
        showInventoryTab.setEnabledAt(showInventoryTab.getTabCount() -2, true);
        showInventoryTab.setEnabledAt(showInventoryTab.getTabCount() -1, true);
    }
    private void enableGuestTabs(){
        showInventoryTab.setEnabledAt(showInventoryTab.getTabCount() -3, false);
        showInventoryTab.setEnabledAt(showInventoryTab.getTabCount() -2, false);
        showInventoryTab.setEnabledAt(showInventoryTab.getTabCount() -1, true);
    }
    private void cleanLoginInputs(){
        userID.setText("");
        password.setText("");
        userID.requestFocus();
    }  
    private void addUserstoHastable(){
        users.put("admin", "admin");
        users.put("guest", "guest");
    }   
    private void enableTabs(String user, String pass){
        
        if(user.isEmpty() || pass.isEmpty()){
            final ImageIcon iconSuperman = new ImageIcon("../icons/google-forms.png");

            JOptionPane.showMessageDialog(null,
                "All fields are required, fill them out",
                "Missing fields ...",
                JOptionPane.INFORMATION_MESSAGE,
                iconSuperman);
            userID.requestFocus();
            return;
        }
        
        
        final ImageIcon loginUnlock = new ImageIcon("../icons/login-unlock.png");
        
        // HASHTABLE USE
        if(users.containsKey(user)){
            // User in database
            String dbPassword = users.get(user);
            
            if(dbPassword.equals(pass)){
                switch(pass){
                    case "admin":
                        // Admin user
                        enableAdminTabs();
                        final ImageIcon iconSuperman = new ImageIcon("../icons/superman.png");

                        JOptionPane.showMessageDialog(null,
                            String.format("Successfully logged as: %s, now all tabs has been unlocked", user),
                                "Adminstrator",
                            JOptionPane.INFORMATION_MESSAGE,
                            iconSuperman);

                        cleanLoginInputs();
                        loginStatus.setText("Logged as Admin");
                        loginStatusIcon.setIcon(loginUnlock);
                        // Spiderman text
                        final ImageIcon spidermanIcon = new ImageIcon("../icons/spidy-100.png");
                        labelLoginIcon.setIcon(spidermanIcon);
                        labelLoginLegend.setText("A great power carries a great responsibility!!!");
                        
                        break;
                    case "guest":
                        // Guest user
                        enableGuestTabs();
                        final ImageIcon iconNormalUser = new ImageIcon("../icons/normal-user.png");

                        JOptionPane.showMessageDialog(null,
                            String.format("Successfully logged as: %s, some tabs has been locked", user),
                                "Guest",
                            JOptionPane.INFORMATION_MESSAGE,
                            iconNormalUser);
                        cleanLoginInputs();

                        loginStatus.setText("Logged as Guest");
                        loginStatusIcon.setIcon(loginUnlock);
                        // Remove Spiderman icon and text
                        labelLoginIcon.setIcon(null);
                        labelLoginLegend.setText("");
                        break;
                }     
            }
            else{
                // Password does not match
                final ImageIcon cloudAlert = new ImageIcon("../icons/cloud-alert.png");
                JOptionPane.showMessageDialog(null, 
                String.format("The password does not match", user),
                    "Wrong password",
                JOptionPane.ERROR_MESSAGE,
                cloudAlert); 
                cleanLoginInputs();
            }

        }
        else{
            // User not in database
            final ImageIcon userNotInDatabase = new ImageIcon("../icons/id-not-verified-48.png");
            JOptionPane.showMessageDialog(null, 
            String.format("The user: (%s) is not in database", user),
                "Invalid user",
            JOptionPane.ERROR_MESSAGE,
            userNotInDatabase); 
            cleanLoginInputs();
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addItemPrice;
    private javax.swing.JTextField addItemQty;
    private javax.swing.JMenu authorsMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JTable inventoryTable;
    private javax.swing.JComboBox<String> itemComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelLoginIcon;
    private javax.swing.JLabel labelLoginLegend;
    private javax.swing.JLabel loginStatus;
    private javax.swing.JLabel loginStatusIcon;
    private javax.swing.JTextField newItem;
    private javax.swing.JPasswordField password;
    private javax.swing.JTabbedPane showInventoryTab;
    private javax.swing.JButton updateInventoryButton;
    private javax.swing.JTextField userID;
    // End of variables declaration//GEN-END:variables
}
